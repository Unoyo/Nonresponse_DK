B = 10
predictions <- foreach(m = 1:B, .combine = cbind) %do% {
M <- sample(nrow(mydata_u), size = floor((nrow(mydata_u)/m)))
glm_fit <- glm(formula = f,
data = rbind(mydata_p, mydata_u[M,]),
family = binomial)
predict(glm_fit, newdata = mydata_u, type = "response")
}
predictions <- rowMeans(predictions)
plot(predictions)
u_p <- predictions[predictions > 0.5]
u_n <- predictions[predictions <= 0.5]
proc.time() - Hajime
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(3/4,1/4))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
mydata_p <- mydata %>%
filter(inf_exp == 1)
mydata_u <- mydata %>%
filter(inf_exp == 0)
mydata_names <- names(mydata)
f <- as.formula(paste("inf_exp~", paste(mydata_names[mydata_names != "inf_exp"], collapse = "+")))
m = 4
B = 10
predictions <- foreach(m = 1:B, .combine = cbind) %do% {
M <- sample(nrow(mydata_u), size = floor((nrow(mydata_u)/m)))
glm_fit <- glm(formula = f,
data = rbind(mydata_p, mydata_u[M,]),
family = binomial)
predict(glm_fit, newdata = mydata_u, type = "response")
}
predictions <- rowMeans(predictions)
plot(predictions)
u_p <- predictions[predictions > 0.5]
u_n <- predictions[predictions <= 0.5]
proc.time() - Hajime
count(u_p)
length(u_p)
length(u_n)
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(1/4,3/4))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
mydata_p <- mydata %>%
filter(inf_exp == 1)
mydata_u <- mydata %>%
filter(inf_exp == 0)
mydata_names <- names(mydata)
f <- as.formula(paste("inf_exp~", paste(mydata_names[mydata_names != "inf_exp"], collapse = "+")))
m = 4
B = 10
predictions <- foreach(m = 1:B, .combine = cbind) %do% {
M <- sample(nrow(mydata_u), size = floor((nrow(mydata_u)/m)))
glm_fit <- glm(formula = f,
data = rbind(mydata_p, mydata_u[M,]),
family = binomial)
predict(glm_fit, newdata = mydata_u, type = "response")
}
predictions <- rowMeans(predictions)
plot(predictions)
u_p <- predictions[predictions > 0.5]
u_n <- predictions[predictions <= 0.5]
length(u_p) length(u_n)
proc.time() - Hajime
length(u_p)
length(u_n)
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(1/4,3/4))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
mydata_p <- mydata %>%
filter(inf_exp == 1)
mydata_u <- mydata %>%
filter(inf_exp == 0)
mydata_names <- names(mydata)
f <- as.formula(paste("inf_exp~", paste(mydata_names[mydata_names != "inf_exp"], collapse = "+")))
m = 2
B = 10
predictions <- foreach(m = 1:B, .combine = cbind) %do% {
M <- sample(nrow(mydata_u), size = floor((nrow(mydata_u)/m)))
glm_fit <- glm(formula = f,
data = rbind(mydata_p, mydata_u[M,]),
family = binomial)
predict(glm_fit, newdata = mydata_u, type = "response")
}
predictions <- rowMeans(predictions)
plot(predictions)
u_p <- predictions[predictions > 0.5]
u_n <- predictions[predictions <= 0.5]
length(u_p)
length(u_n)
proc.time() - Hajime
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
mydata_p <- mydata %>%
filter(inf_exp == 1)
mydata_u <- mydata %>%
filter(inf_exp == 0)
mydata_names <- names(mydata)
f <- as.formula(paste("inf_exp~", paste(mydata_names[mydata_names != "inf_exp"], collapse = "+")))
m = 2
B = 10
predictions <- foreach(m = 1:B, .combine = cbind) %do% {
M <- sample(nrow(mydata_u), size = floor((nrow(mydata_u)/m)))
glm_fit <- glm(formula = f,
data = rbind(mydata_p, mydata_u[M,]),
family = binomial)
predict(glm_fit, newdata = mydata_u, type = "response")
}
predictions <- rowMeans(predictions)
plot(predictions)
u_p <- predictions[predictions > 0.5]
u_n <- predictions[predictions <= 0.5]
length(u_p)
length(u_n)
proc.time() - Hajime
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
mydata_p <- mydata %>%
filter(inf_exp == 1)
mydata_u <- mydata %>%
filter(inf_exp == 0)
mydata_names <- names(mydata)
f <- as.formula(paste("inf_exp~", paste(mydata_names[mydata_names != "inf_exp"], collapse = "+")))
m = 1.5
B = 10
predictions <- foreach(m = 1:B, .combine = cbind) %do% {
M <- sample(nrow(mydata_u), size = floor((nrow(mydata_u)/m)))
glm_fit <- glm(formula = f,
data = rbind(mydata_p, mydata_u[M,]),
family = binomial)
predict(glm_fit, newdata = mydata_u, type = "response")
}
predictions <- rowMeans(predictions)
plot(predictions)
u_p <- predictions[predictions > 0.5]
u_n <- predictions[predictions <= 0.5]
length(u_p)
length(u_n)
proc.time() - Hajime
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
mydata_p <- mydata %>%
filter(inf_exp == 1)
mydata_u <- mydata %>%
filter(inf_exp == 0)
mydata_names <- names(mydata)
f <- as.formula(paste("inf_exp~", paste(mydata_names[mydata_names != "inf_exp"], collapse = "+")))
m = 2
B = 1000
predictions <- foreach(m = 1:B, .combine = cbind) %do% {
M <- sample(nrow(mydata_u), size = floor((nrow(mydata_u)/m)))
glm_fit <- glm(formula = f,
data = rbind(mydata_p, mydata_u[M,]),
family = binomial)
predict(glm_fit, newdata = mydata_u, type = "response")
}
predictions <- rowMeans(predictions)
plot(predictions)
u_p <- predictions[predictions > 0.5]
u_n <- predictions[predictions <= 0.5]
length(u_p)
length(u_n)
proc.time() - Hajime
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
mydata_p <- mydata %>%
filter(inf_exp == 1)
mydata_u <- mydata %>%
filter(inf_exp == 0)
mydata_names <- names(mydata)
f <- as.formula(paste("inf_exp~", paste(mydata_names[mydata_names != "inf_exp"], collapse = "+")))
m = 2
B = 10
predictions <- foreach(m = 1:B, .combine = cbind) %do% {
M <- sample(nrow(mydata_u), size = floor((nrow(mydata_u)/m)))
glm_fit <- glm(formula = f,
data = rbind(mydata_p, mydata_u[M,]),
family = binomial)
predict(glm_fit, newdata = mydata_u, type = "response")
}
predictions <- rowMeans(predictions)
plot(predictions)
u_p <- predictions[predictions > 0.5]
u_n <- predictions[predictions <= 0.5]
length(u_p)
length(u_n)
proc.time() - Hajime
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%ï¾‚?
select(one_of(var_C)) %>%
mydata_names <- names(mydata)
colnames(mydata[1]) <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "inf_exp", collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var_C)) %>%
mydata_names <- names(mydata)
colnames(mydata[1]) <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "inf_exp", collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var)) %>%
mydata_names <- names(mydata)
colnames(mydata[1]) <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "inf_exp", collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var)) %>%
mydata_names <- names(mydata)
colnames(mydata[1]) <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "inf_exp"], collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var))
mydata_names <- names(mydata)
colnames(mydata[1]) <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "inf_exp"], collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
mydata
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var))
mydata_names <- names(mydata)
colnames(mydata[1]) <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "inf_exp"], collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
colnames(mydata[1]) <- "treat"
colnames(mydata[1])
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
suppressMessages(library(MatchIt))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var))
mydata_names <- names(mydata)
names(mydata)[1]) <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "inf_exp"], collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
suppressMessages(library(MatchIt))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var))
mydata_names <- names(mydata)
names(mydata)[1] <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "inf_exp"], collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
mydata
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
suppressMessages(library(MatchIt))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var))
mydata_names <- names(mydata)
names(mydata)[1] <- "treat"
h <- as.formula(paste("treat~", paste(mydata[mydata != "treat"], collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
suppressMessages(library(MatchIt))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var))
mydata_names <- names(mydata)
names(mydata)[1] <- "treat"
h <- as.formula(paste("treat~", paste(mydata_names[mydata_names != "treat"], collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
suppressMessages(library(foreach))
suppressMessages(library(dplyr))
suppressMessages(library(MatchIt))
Hajime <- proc.time()
mydata <- NULL
N <- 10000
for(i in 1:13){
assign(paste("di",i,sep = ""),as.factor(sample(1:3, size = N, replace = TRUE)))
mydata <- cbind(mydata, get(paste("di",i,sep = "")))
mydata <- as.data.frame(mydata)
names(mydata)[i] <- paste("di",i,sep = "")
}
mydata$inf_exp <- sample(0:1, size = N, replace = TRUE, prob = c(2/5,3/5))
mydata$ind <- as.factor(sample(1:100, size = N, replace = TRUE))
var <- c("inf_exp","ind",
"di1","di2","di3","di4","di5","di6","di7",
"di8","di9","di10","di11","di12","di13")
mydata <- mydata %>%
select(one_of(var))
mydata_names <- names(mydata)
names(mydata)[1] <- "treat"
h <- as.formula(paste("treat~", paste(mydata_names[mydata_names != "treat"], collapse = "+")))
match_res <- matchit(formula = h, data = mydata, method = "exact")
mydata
